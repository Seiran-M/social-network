import {Dispatch} from 'redux'import {profileAPI} from '../api/api'export enum ACTIONS_TYPE {   ADD_POST = 'ADD_POST',   UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT',   SET_USER_PROFILE = 'SET_USER_PROFILE',}export type PhotosType = {   small: string | undefined   large: string | undefined}export type ContactsType = {   facebook: string | null   website: string | null   vk: string | null   twitter: string | null   instagram: string | null   youtube: string | null   github: string | null   mainLink: null,}export type ProfileType = {   aboutMe: string   contacts: ContactsType   photos: PhotosType   lookingForAJob: boolean   lookingForAJobDescription: string   fullName: string   userId: number}type PostsType = {   id: number   message: string   likesCount: number}type InitialStateType = {   posts: Array<PostsType>   newPostText: string   profile: any}const initialState = {   posts: [      {id: 0, message: 'Hi, how are you?', likesCount: 12},      {id: 1, message: 'It\'s my first post!', likesCount: 55},      {id: 2, message: 'Bye', likesCount: 0},      {id: 3, message: 'Good', likesCount: 30},   ],   newPostText: '',   profile: null}export type AddPostActionType = {   type: typeof ACTIONS_TYPE.ADD_POST}export type UpdateNewPostTextActionType = {   type: typeof ACTIONS_TYPE.UPDATE_NEW_POST_TEXT   newText: string}export type setUserProfileActionType = {   type: typeof ACTIONS_TYPE.SET_USER_PROFILE   profile: ProfileType}export type ActionsType = AddPostActionType | UpdateNewPostTextActionType | setUserProfileActionTypeexport const profileReducer = (state = initialState, action: ActionsType): InitialStateType => {   switch (action.type) {      case ACTIONS_TYPE.ADD_POST:         const newPost = {id: new Date().getTime(), message: state.newPostText, likesCount: 0,}         return {            ...state,            posts: [...state.posts, newPost],            newPostText: '',         }      case ACTIONS_TYPE.UPDATE_NEW_POST_TEXT:         return {            ...state,            newPostText: action.newText         }      case ACTIONS_TYPE.SET_USER_PROFILE: {         return {            ...state,            profile: action.profile         }      }      default:         return state   }}export const addPost = (): AddPostActionType => {   return {type: ACTIONS_TYPE.ADD_POST}}export const updateNewPostText = (newText: string): UpdateNewPostTextActionType => {   return {type: ACTIONS_TYPE.UPDATE_NEW_POST_TEXT, newText}}export const setUserProfile = (profile: ProfileType): setUserProfileActionType => {   return {type: ACTIONS_TYPE.SET_USER_PROFILE, profile}}export const getUserProfile = (userId: string) => (dispatch: Dispatch) => {   profileAPI.getProfile(userId)      .then(response => {         dispatch(setUserProfile(response.data))      })}