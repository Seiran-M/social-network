export enum ACTIONS_TYPE {   ADD_POST = 'ADD_POST',   UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'}type PostsType = {   id: number   message: string   likesCount: number}type InitialStateType = {   posts: Array<PostsType>   newPostText: string}const initialState = {   posts: [      {id: 0, message: 'Hi, how are you?', likesCount: 12},      {id: 1, message: 'It\'s my first post!', likesCount: 55},      {id: 2, message: 'Bye', likesCount: 0},      {id: 3, message: 'Good', likesCount: 30},   ],   newPostText: '',}export type AddPostActionType = {   type: typeof ACTIONS_TYPE.ADD_POST}export type UpdateNewPostTextActionType = {   type: typeof ACTIONS_TYPE.UPDATE_NEW_POST_TEXT   newText: string}export type ActionsType = AddPostActionType | UpdateNewPostTextActionTypeexport const profileReducer = (state = initialState, action: ActionsType): InitialStateType => {   switch (action.type) {      case ACTIONS_TYPE.ADD_POST:         const newPost = {id: new Date().getTime(), message: state.newPostText, likesCount: 0,}         return {            ...state,            posts: [...state.posts, newPost],            newPostText: '',         }      case ACTIONS_TYPE.UPDATE_NEW_POST_TEXT:         return {            ...state,            newPostText: action.newText         }      default:         return state   }}export const addPostAC = (): AddPostActionType => {   return {type: ACTIONS_TYPE.ADD_POST}}export const updateNewPostTextAC = (newText: string): UpdateNewPostTextActionType => {   return {type: ACTIONS_TYPE.UPDATE_NEW_POST_TEXT, newText}}