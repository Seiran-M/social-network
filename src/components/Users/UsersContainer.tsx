import React from 'react'import {compose} from 'redux'import {connect, ConnectedProps} from 'react-redux'import {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow} from '../../redux/users-reducer'import {AppStateType} from '../../redux/redux-store'import {Users} from './Users'import {Preloader} from '../../common/Preloader/Preloader'import {   getCurrentPage,   getFollowingInProgress,   getIsFetching,   getPageSize,   getTotalUsersCount,   getUsersSelector} from '../../redux/users-selectors'class UsersContainer extends React.PureComponent<TProps, AppStateType> {   componentDidMount() {      const {currentPage, pageSize, requestUsers} = this.props      requestUsers(currentPage, pageSize)   }   onPageChanged = (pageNumber: number) => {      const {pageSize} = this.props      requestUsers(pageNumber, pageSize)   }   render() {      const {         currentPage, pageSize, totalUsersCount, users,         follow, unfollow, followingInProgress, isFetching      } = this.props      return (         <>            {isFetching ? <Preloader/> : null}            <Users               totalUsersCount={totalUsersCount}               pageSize={pageSize}               currentPage={currentPage}               onPageChanged={this.onPageChanged}               users={users}               follow={follow}               unfollow={unfollow}               followingInProgress={followingInProgress}            />         </>      )   }}export const mapStateToProps = (state: AppStateType) => ({   users: getUsersSelector(state),   pageSize: getPageSize(state),   totalUsersCount: getTotalUsersCount(state),   currentPage: getCurrentPage(state),   isFetching: getIsFetching(state),   followingInProgress: getFollowingInProgress(state)})const connector = connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})export default compose<React.ComponentType>(   // withAuthRedirect,   connector,)(UsersContainer)// typestype TProps = ConnectedProps<typeof connector>