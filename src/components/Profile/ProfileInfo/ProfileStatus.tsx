import React, {ChangeEvent} from 'react'export class ProfileStatus extends React.Component<PropsType> {   state: ProfileStatusState = {      editMode: false,      status: this.props.status   }   onEditMode = () => {      this.setState({         editMode: true      })   }   offEditMode = () => {      this.setState({         editMode: false      })      this.props.updateUserStatus(this.state.status)   }   onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {      this.setState({         status: e.currentTarget.value      })   }   componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {      if (prevProps.status !== this.props.status) {         this.setState({            status: this.props.status         })      }   }   render() {      return (         <>            {!this.state.editMode               ? <div>                  <span onDoubleClick={this.onEditMode}> Status: {this.props.status || 'enter your status'}</span>               </div>               : <div>                  <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.offEditMode} value={this.props.status}/>               </div>            }         </>      )   }}// typestype PropsType = {   status: string   updateUserStatus: (status: string) => void}type ProfileStatusState = {   editMode: boolean   status: string}