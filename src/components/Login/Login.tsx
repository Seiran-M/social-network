import React, {FC} from 'react'import {InjectedFormProps, reduxForm} from 'redux-form'import {connect} from 'react-redux'import {Redirect} from 'react-router-dom'import {createField, Input} from '../../common/FormsContfolls/FormsControlls'import {required} from '../../utils/validator'import {login} from '../../redux/auth-reducer'import {AppStateType} from '../../redux/redux-store'import styles from '../../common/FormsContfolls/FormsControlls.module.css'export const LoginForm: FC<InjectedFormProps<FormDataType, LoginReduxFormPropsType> & LoginReduxFormPropsType> = React.memo((props) => {   const {handleSubmit, error, captchaUrl} = props   return (      <form onSubmit={handleSubmit}>         {createField('Email', 'email', [required], Input)}         {createField('Password', 'password', [required], Input, {type: 'password'})}         {createField(null, 'rememberMe', null, Input, {type: 'checkbox'}, 'remember me')}         {captchaUrl && <img src={captchaUrl}/>}         {captchaUrl && createField('Symbols from image', 'captcha', [required], Input)}         {error && <div className={styles.formSummaryError}>{error}</div>}         <button>Login</button>      </form>   )})const LoginReduxForm = reduxForm<FormDataType, LoginReduxFormPropsType>({form: 'login'})(LoginForm)type LoginReduxFormPropsType = {   captchaUrl: string | null}const Login: FC<LoginPropsType> = React.memo((props) => {   const {login, isAuth, captchaUrl} = props   const onSubmit = (formData: FormDataType) => login(formData.email, formData.password, formData.rememberMe, formData.captcha)   if (isAuth) {      console.log('REDIRECT')      return (         <Redirect to={'/profile'}/>      )   }   return (      <>         <h1>Login</h1>         <LoginReduxForm captchaUrl={captchaUrl} onSubmit={onSubmit}/>      </>   )})const mapStateToProps = (state: AppStateType) => ({   isAuth: state.auth.isAuth,   captchaUrl: state.auth.captchaUrl})export default connect(mapStateToProps, {login})(Login)// typestype FormDataType = {   email: string   password: string   rememberMe: boolean   captcha: string | null}type LoginPropsType = {   isAuth: boolean   captchaUrl: string | null   login: (email: string, password: string, rememberMe: boolean, captcha: string | null) => void}