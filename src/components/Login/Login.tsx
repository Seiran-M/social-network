import React from 'react'import {Field, InjectedFormProps, reduxForm} from 'redux-form'import {connect} from 'react-redux'import {Redirect} from 'react-router-dom'import {Input} from '../../common/FormsContfolls/FormsControlls'import {required} from '../../utils/validator'import {login} from '../../redux/auth-reducer'import {AppStateType} from '../../redux/redux-store'import styles from '../../common/FormsContfolls/FormsControlls.module.css'export const LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {   const {handleSubmit, error} = props   return (      <>         <form onSubmit={handleSubmit}>            <Field type="text" placeholder={'Email'} name={'email'} component={Input} validate={[required]}/>            <Field type="password" placeholder={'Password'} name={'password'} component={Input} validate={[required]}/>            <div>               <Field type="checkbox" name={'rememberMe'} component={Input}/>               <span>remember me</span>            </div>            {error && <div className={styles.formSummaryError}>{error}</div>}            <button>Login</button>         </form>      </>   )}const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)const Login: React.FC<LoginPropsType> = (props) => {   const {login, isAuth} = props   const onSubmit = (formData: FormDataType) => login(formData.email, formData.password, formData.rememberMe)   if (isAuth) {      console.log('REDIRECT')      return (         <Redirect to={'/profile'}/>      )   }   return (      <>         <h1>Login</h1>         <LoginReduxForm onSubmit={onSubmit}/>      </>   )}const mapStateToProps = (state: AppStateType) => ({   isAuth: state.auth.isAuth})// @ts-ignoreexport default connect(mapStateToProps, {login})(Login)// typestype FormDataType = {   email: string   password: string   rememberMe: boolean}type LoginPropsType = {   isAuth: boolean   login: (email: string, password: string, rememberMe: boolean | undefined) => void}